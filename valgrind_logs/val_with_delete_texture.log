==4343== Memcheck, a memory error detector
==4343== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==4343== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==4343== Command: ./cub3D own_test.cub
==4343== 
==4343== Invalid read of size 8
==4343==    at 0x401D704: strncmp (strcmp.S:175)
==4343==    by 0x400604D: is_dst (dl-load.c:209)
==4343==    by 0x4008566: _dl_dst_count (dl-load.c:246)
==4343==    by 0x4008757: expand_dynamic_string_token (dl-load.c:388)
==4343==    by 0x40088D1: fillin_rpath.isra.0 (dl-load.c:460)
==4343==    by 0x4008BE1: decompose_rpath (dl-load.c:631)
==4343==    by 0x4009745: cache_rpath (dl-load.c:673)
==4343==    by 0x4009745: cache_rpath (dl-load.c:654)
==4343==    by 0x4009745: _dl_map_object (dl-load.c:2074)
==4343==    by 0x400DDC0: openaux (dl-deps.c:64)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x400E138: _dl_map_object_deps (dl-deps.c:248)
==4343==    by 0x4013DAA: dl_open_worker (dl-open.c:571)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==  Address 0x5b1fac9 is 9 bytes inside a block of size 15 alloc'd
==4343==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==4343==    by 0x401C26A: strdup (strdup.c:42)
==4343==    by 0x4008B74: decompose_rpath (dl-load.c:606)
==4343==    by 0x4009745: cache_rpath (dl-load.c:673)
==4343==    by 0x4009745: cache_rpath (dl-load.c:654)
==4343==    by 0x4009745: _dl_map_object (dl-load.c:2074)
==4343==    by 0x400DDC0: openaux (dl-deps.c:64)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x400E138: _dl_map_object_deps (dl-deps.c:248)
==4343==    by 0x4013DAA: dl_open_worker (dl-open.c:571)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x40138F9: _dl_open (dl-open.c:837)
==4343==    by 0x4A0A257: dlopen_doit (dlopen.c:66)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343== 
==4343== Invalid read of size 8
==4343==    at 0x401D704: strncmp (strcmp.S:175)
==4343==    by 0x400604D: is_dst (dl-load.c:209)
==4343==    by 0x400861E: _dl_dst_substitute (dl-load.c:288)
==4343==    by 0x40088D1: fillin_rpath.isra.0 (dl-load.c:460)
==4343==    by 0x4008BE1: decompose_rpath (dl-load.c:631)
==4343==    by 0x4009745: cache_rpath (dl-load.c:673)
==4343==    by 0x4009745: cache_rpath (dl-load.c:654)
==4343==    by 0x4009745: _dl_map_object (dl-load.c:2074)
==4343==    by 0x400DDC0: openaux (dl-deps.c:64)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x400E138: _dl_map_object_deps (dl-deps.c:248)
==4343==    by 0x4013DAA: dl_open_worker (dl-open.c:571)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x40138F9: _dl_open (dl-open.c:837)
==4343==  Address 0x5b1fac9 is 9 bytes inside a block of size 15 alloc'd
==4343==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==4343==    by 0x401C26A: strdup (strdup.c:42)
==4343==    by 0x4008B74: decompose_rpath (dl-load.c:606)
==4343==    by 0x4009745: cache_rpath (dl-load.c:673)
==4343==    by 0x4009745: cache_rpath (dl-load.c:654)
==4343==    by 0x4009745: _dl_map_object (dl-load.c:2074)
==4343==    by 0x400DDC0: openaux (dl-deps.c:64)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x400E138: _dl_map_object_deps (dl-deps.c:248)
==4343==    by 0x4013DAA: dl_open_worker (dl-open.c:571)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x40138F9: _dl_open (dl-open.c:837)
==4343==    by 0x4A0A257: dlopen_doit (dlopen.c:66)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343== 
==4343== 
==4343== HEAP SUMMARY:
==4343==     in use at exit: 287,094 bytes in 2,750 blocks
==4343==   total heap usage: 69,081 allocs, 66,331 frees, 261,382,964 bytes allocated
==4343== 
==4343== 64 bytes in 1 blocks are definitely lost in loss record 1,857 of 2,025
==4343==    at 0x4838DEF: operator new(unsigned long) (vg_replace_malloc.c:342)
==4343==    by 0x6B2E879: ???
==4343==    by 0x63F37DF: ???
==4343==    by 0x400FFE1: call_init.part.0 (dl-init.c:72)
==4343==    by 0x40100E8: call_init (dl-init.c:30)
==4343==    by 0x40100E8: _dl_init (dl-init.c:119)
==4343==    by 0x4B67AEC: _dl_catch_exception (dl-error-skeleton.c:182)
==4343==    by 0x4014363: dl_open_worker (dl-open.c:758)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x40138F9: _dl_open (dl-open.c:837)
==4343==    by 0x4A0A257: dlopen_doit (dlopen.c:66)
==4343==    by 0x4B67A8F: _dl_catch_exception (dl-error-skeleton.c:208)
==4343==    by 0x4B67B4E: _dl_catch_error (dl-error-skeleton.c:227)
==4343== 
==4343== 5,355 bytes in 255 blocks are definitely lost in loss record 2,019 of 2,025
==4343==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==4343==    by 0x4ABBF3A: strdup (strdup.c:42)
==4343==    by 0x60144A6: ???
==4343==    by 0x6014254: ???
==4343==    by 0x5FB7F73: ???
==4343==    by 0x5EDB436: ???
==4343==    by 0x5EDBCE8: ???
==4343==    by 0x5F570F0: ???
==4343==    by 0x5F58417: ???
==4343==    by 0x4876D02: ??? (in /usr/lib/x86_64-linux-gnu/libglfw.so.3.3)
==4343==    by 0x4866477: ??? (in /usr/lib/x86_64-linux-gnu/libglfw.so.3.3)
==4343==    by 0x486BB6A: glfwCreateWindow (in /usr/lib/x86_64-linux-gnu/libglfw.so.3.3)
==4343== 
==4343== LEAK SUMMARY:
==4343==    definitely lost: 5,419 bytes in 256 blocks
==4343==    indirectly lost: 0 bytes in 0 blocks
==4343==      possibly lost: 0 bytes in 0 blocks
==4343==    still reachable: 281,643 bytes in 2,493 blocks
==4343==         suppressed: 32 bytes in 1 blocks
==4343== Reachable blocks (those to which a pointer was found) are not shown.
==4343== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==4343== 
==4343== For lists of detected and suppressed errors, rerun with: -s
==4343== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
